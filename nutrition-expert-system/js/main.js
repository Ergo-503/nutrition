// –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è
function calculateNutrition() {
    try {
        // –ó–±–∏—Ä–∞—î–º–æ –¥–∞–Ω—ñ –∑ —Ñ–æ—Ä–º–∏
        const age = parseInt(document.getElementById('age').value);
        const weight = parseFloat(document.getElementById('weight').value);
        const height = parseFloat(document.getElementById('height').value);
        const gender = document.getElementById('gender').value;
        const activityLevel = parseFloat(document.getElementById('activity').value);
        const goal = document.getElementById('goal').value;
        const isVegan = document.getElementById('vegan').checked;
        const isDiabetic = document.getElementById('diabetes').checked;
        
        // –í–∞–ª—ñ–¥–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö
        if (isNaN(age) || isNaN(weight) || isNaN(height)) {
            throw new Error('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω—ñ —á–∏—Å–ª–æ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è');
        }
        
        if (age < 16 || age > 80) {
            throw new Error('–í—ñ–∫ –º–∞—î –±—É—Ç–∏ –≤—ñ–¥ 16 –¥–æ 80 —Ä–æ–∫—ñ–≤');
        }
        
        if (weight < 40 || weight > 200) {
            throw new Error('–í–∞–≥–∞ –º–∞—î –±—É—Ç–∏ –≤—ñ–¥ 40 –¥–æ 200 –∫–≥');
        }
        
        if (height < 140 || height > 220) {
            throw new Error('–ó—Ä—ñ—Å—Ç –º–∞—î –±—É—Ç–∏ –≤—ñ–¥ 140 –¥–æ 220 —Å–º');
        }
        
        // –†–æ–∑—Ä–∞—Ö—É–Ω–∫–∏
        const bmr = calculateBMR(weight, height, age, gender);
        let tdee = bmr * activityLevel;
        
        // –ö–æ—Ä–µ–∫—Ü—ñ—è –∫–∞–ª–æ—Ä—ñ–π–Ω–æ—Å—Ç—ñ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –º–µ—Ç–∏
        if (goal === 'gain') {
            tdee *= 1.15; // +15% –¥–ª—è –Ω–∞–±–æ—Ä—É –º–∞—Å–∏
        } else if (goal === 'lose') {
            tdee *= 0.85; // -15% –¥–ª—è —Å—Ö—É–¥–Ω–µ–Ω–Ω—è
        }
        
        const macros = calculateMacronutrients(tdee, weight, goal);
        
        // –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è –ø—Ä–æ–¥—É–∫—Ç—ñ–≤
        const optimization = optimizeProducts(
            tdee, 
            macros.protein, 
            macros.fat, 
            macros.carbs, 
            isVegan, 
            isDiabetic
        );
        
        // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
        displayResults(bmr, tdee, macros, optimization, goal, weight, isVegan, isDiabetic);
        
    } catch (error) {
        showError(error.message);
    }
}

// –§—É–Ω–∫—Ü—ñ—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
function displayResults(bmr, tdee, macros, optimization, goal, weight, isVegan, isDiabetic) {
    // –ü–æ–∫–∞–∑—É—î–º–æ —Å–µ–∫—Ü—ñ—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
    document.getElementById('results').style.display = 'block';
    
    // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –ø–æ—Ç—Ä–µ–±–∏ –≤ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—ñ
    const needsText = `
üî• –ö–∞–ª–æ—Ä—ñ—ó: ${Math.round(tdee)} –∫–∫–∞–ª/–¥–µ–Ω—å
ü•© –ë—ñ–ª–∫–∏: ${macros.protein}–≥ (${Math.round(macros.protein * 4 / tdee * 100)}%)
ü•ë –ñ–∏—Ä–∏: ${macros.fat}–≥ (${Math.round(macros.fat * 9 / tdee * 100)}%)
üçû –í—É–≥–ª–µ–≤–æ–¥–∏: ${macros.carbs}–≥ (${Math.round(macros.carbs * 4 / tdee * 100)}%)

üìä BMR (–±–∞–∑–∞–ª—å–Ω–∏–π –º–µ—Ç–∞–±–æ–ª—ñ–∑–º): ${Math.round(bmr)} –∫–∫–∞–ª
‚ö° TDEE (–∑–∞–≥–∞–ª—å–Ω—ñ –≤–∏—Ç—Ä–∞—Ç–∏): ${Math.round(tdee)} –∫–∫–∞–ª
üéØ –ú–µ—Ç–∞: ${getGoalText(goal)}
    `;
    
    document.getElementById('nutritional-needs').textContent = needsText.trim();
    
    // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç—ñ–≤
    let productsText = 'üìã –û–ü–¢–ò–ú–ê–õ–¨–ù–ò–ô –°–ü–ò–°–û–ö –ü–†–û–î–£–ö–¢–Ü–í:\n\n';
    optimization.products.forEach((product, index) => {
        productsText += `${index + 1}. ${product.name}: ${product.amount}–≥\n`;
    });
    
    productsText += `\nüìä –§–ê–ö–¢–ò–ß–ù–ò–ô –°–ö–õ–ê–î –†–ê–¶–Ü–û–ù–£:\n`;
    productsText += `–ö–∞–ª–æ—Ä—ñ—ó: ${optimization.actualNutrition.calories} –∫–∫–∞–ª\n`;
    productsText += `–ë—ñ–ª–∫–∏: ${optimization.actualNutrition.protein}–≥\n`;
    productsText += `–ñ–∏—Ä–∏: ${optimization.actualNutrition.fat}–≥\n`;
    productsText += `–í—É–≥–ª–µ–≤–æ–¥–∏: ${optimization.actualNutrition.carbs}–≥`;
    
    document.getElementById('products-list').textContent = productsText;
    document.getElementById('total-cost').textContent = `üí∞ –ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å: ${optimization.totalCost.toFixed(2)} –≥—Ä–Ω/–¥–µ–Ω—å`;
    
    // –ü–æ—è—Å–Ω–µ–Ω–Ω—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π
    const explanationText = generateExplanation(goal, isVegan, isDiabetic, macros, weight);
    document.getElementById('explanation').innerHTML = explanationText;
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ –≥—Ä–∞—Ñ—ñ–∫–∏
    createMacroChart(macros);
    createWeightChart(weight, goal);
    
    // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –µ–∫—Å–ø–æ—Ä—Ç—É
    addExportButton();
    
    // –°–∫—Ä–æ–ª–∏–º–æ –¥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
    document.getElementById('results').scrollIntoView({ behavior: 'smooth' });
}

// –î–æ–ø–æ–º—ñ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –º–µ—Ç–∏
function getGoalText(goal) {
    switch(goal) {
        case 'gain': return '–ù–∞–±—ñ—Ä –º–∞—Å–∏';
        case 'lose': return '–°—Ö—É–¥–Ω–µ–Ω–Ω—è/–°—É—à–∫–∞';
        default: return '–ü—ñ–¥—Ç—Ä–∏–º–∞–Ω–Ω—è —Ñ–æ—Ä–º–∏';
    }
}

// –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø–æ—è—Å–Ω–µ–Ω—å
function generateExplanation(goal, isVegan, isDiabetic, macros, weight) {
    let explanation = '<h4>üéØ –û—Å–Ω–æ–≤–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É:</h4>';
    explanation += '<p>–í–∞—à—ñ –ø–æ—Ç—Ä–µ–±–∏ —Ä–æ–∑—Ä–∞—Ö–æ–≤–∞–Ω—ñ –∑–∞ –Ω–∞—É–∫–æ–≤–æ –æ–±“ë—Ä—É–Ω—Ç–æ–≤–∞–Ω–æ—é —Ñ–æ—Ä–º—É–ª–æ—é –ú—ñ—Ñ—Ñ–ª—ñ–Ω–∞-–°–∞–Ω-–î–∂–µ–æ—Ä ';
    explanation += '–∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º —Ä—ñ–≤–Ω—è —Ñ—ñ–∑–∏—á–Ω–æ—ó –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ —Ç–∞ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–æ—ó –º–µ—Ç–∏.</p>';
    
    explanation += '<h4>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –ø–æ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—é:</h4><ul>';
    
    if (goal === 'gain') {
        explanation += '<li>–°–ø–æ–∂–∏–≤–∞–π—Ç–µ 20-30–≥ –±—ñ–ª–∫—ñ–≤ –ø—Ä–æ—Ç—è–≥–æ–º 2 –≥–æ–¥–∏–Ω –ø—ñ—Å–ª—è —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è</li>';
        explanation += '<li>–†–æ–∑–ø–æ–¥—ñ–ª—ñ—Ç—å –ø—Ä–∏–π–æ–º–∏ —ó–∂—ñ –Ω–∞ 5-6 —Ä–∞–∑—ñ–≤ –Ω–∞ –¥–µ–Ω—å</li>';
        explanation += '<li>–ù–µ –∑–∞–±—É–≤–∞–π—Ç–µ –ø—Ä–æ –¥–æ—Å—Ç–∞—Ç–Ω—é –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤–æ–¥–∏ (35-40–º–ª –Ω–∞ –∫–≥ –≤–∞–≥–∏)</li>';
    } else if (goal === 'lose') {
        explanation += '<li>–°—Ç–≤–æ—Ä—ñ—Ç—å –ø–æ–º—ñ—Ä–Ω–∏–π –¥–µ—Ñ—ñ—Ü–∏—Ç –∫–∞–ª–æ—Ä—ñ–π (–Ω–µ –±—ñ–ª—å—à–µ 500 –∫–∫–∞–ª –Ω–∞ –¥–µ–Ω—å)</li>';
        explanation += '<li>–ü—ñ–¥—Ç—Ä–∏–º—É–π—Ç–µ –≤–∏—Å–æ–∫–µ —Å–ø–æ–∂–∏–≤–∞–Ω–Ω—è –±—ñ–ª–∫—ñ–≤ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –º\'—è–∑–æ–≤–æ—ó –º–∞—Å–∏</li>';
        explanation += '<li>–î–æ–¥–∞–π—Ç–µ –∫–∞—Ä–¥—ñ–æ-—Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è 3-4 —Ä–∞–∑–∏ –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å</li>';
    } else {
        explanation += '<li>–î–æ—Ç—Ä–∏–º—É–π—Ç–µ—Å—å –∑–±–∞–ª–∞–Ω—Å–æ–≤–∞–Ω–æ–≥–æ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è</li>';
        explanation += '<li>–°–ø–æ–∂–∏–≤–∞–π—Ç–µ —Ä—ñ–∑–Ω–æ–º–∞–Ω—ñ—Ç–Ω—ñ –ø—Ä–æ–¥—É–∫—Ç–∏ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –º—ñ–∫—Ä–æ–Ω—É—Ç—Ä—ñ—î–Ω—Ç—ñ–≤</li>';
        explanation += '<li>–†–µ–≥—É–ª—è—Ä–Ω–æ –∫–æ–Ω—Ç—Ä–æ–ª—é–π—Ç–µ –≤–∞–≥—É —Ç–∞ —Å–∞–º–æ–ø–æ—á—É—Ç—Ç—è</li>';
    }
    
    if (isVegan) {
        explanation += '<li><strong>–í–µ–≥–∞–Ω—Å—å–∫–∞ –¥—ñ—î—Ç–∞:</strong> –ü–æ—î–¥–Ω—É–π—Ç–µ —Ä—ñ–∑–Ω—ñ —Ä–æ—Å–ª–∏–Ω–Ω—ñ –±—ñ–ª–∫–∏, ';
        explanation += '–¥–æ–¥–∞–π—Ç–µ –≤—ñ—Ç–∞–º—ñ–Ω B12, –æ–º–µ–≥–∞-3 —Ç–∞ –∑–∞–ª—ñ–∑–æ</li>';
    }
    
    if (isDiabetic) {
        explanation += '<li><strong>–î—ñ–∞–±–µ—Ç–∏—á–Ω—ñ –æ–±–º–µ–∂–µ–Ω–Ω—è:</strong> –í—Å—ñ –ø—Ä–æ–¥—É–∫—Ç–∏ –º–∞—é—Ç—å –Ω–∏–∑—å–∫–∏–π ';
        explanation += '–≥–ª—ñ–∫–µ–º—ñ—á–Ω–∏–π —ñ–Ω–¥–µ–∫—Å –¥–ª—è —Å—Ç–∞–±—ñ–ª—å–Ω–æ–≥–æ —Ä—ñ–≤–Ω—è —Ü—É–∫—Ä—É</li>';
    }
    
    explanation += '</ul>';
    
    explanation += '<h4>‚ö†Ô∏è –í–∞–∂–ª–∏–≤—ñ –∑–∞—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è:</h4>';
    explanation += '<p><small>–¶—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –Ω–æ—Å—è—Ç—å –∑–∞–≥–∞–ª—å–Ω–∏–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä. –ü–µ—Ä–µ–¥ –∫–∞—Ä–¥–∏–Ω–∞–ª—å–Ω–∏–º–∏ –∑–º—ñ–Ω–∞–º–∏ ';
    explanation += '–≤ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—ñ –æ–±–æ–≤\'—è–∑–∫–æ–≤–æ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç—É–π—Ç–µ—Å—å –∑ –ª—ñ–∫–∞—Ä–µ–º –∞–±–æ –¥—ñ—î—Ç–æ–ª–æ–≥–æ–º, –æ—Å–æ–±–ª–∏–≤–æ ';
    explanation += '–ø—Ä–∏ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ —Ö—Ä–æ–Ω—ñ—á–Ω–∏—Ö –∑–∞—Ö–≤–æ—Ä—é–≤–∞–Ω—å.</small></p>';
    
    return explanation;
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
document.addEventListener('DOMContentLoaded', function() {
    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó
    const numberInputs = document.querySelectorAll('input[type="number"]');
    numberInputs.forEach(input => {
        input.addEventListener('input', function() {
            validateInput(this);
        });
    });
    
    // –°–∫—Ä–∏–≤–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –Ω–∞ –ø–æ—á–∞—Ç–∫—É
    document.getElementById('results').style.display = 'none';
});